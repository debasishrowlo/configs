" Default {{{
    source $VIMRUNTIME/vimrc_example.vim

    set diffexpr=MyDiff()
    function! MyDiff()
      let opt = '-a --binary '
      if &diffopt =~ 'icase' | let opt = opt . '-i ' | endif
      if &diffopt =~ 'iwhite' | let opt = opt . '-b ' | endif
      let arg1 = v:fname_in
      if arg1 =~ ' ' | let arg1 = '"' . arg1 . '"' | endif
      let arg1 = substitute(arg1, '!', '\!', 'g')
      let arg2 = v:fname_new
      if arg2 =~ ' ' | let arg2 = '"' . arg2 . '"' | endif
      let arg2 = substitute(arg2, '!', '\!', 'g')
      let arg3 = v:fname_out
      if arg3 =~ ' ' | let arg3 = '"' . arg3 . '"' | endif
      let arg3 = substitute(arg3, '!', '\!', 'g')
      if $VIMRUNTIME =~ ' '
        if &sh =~ '\<cmd'
          if empty(&shellxquote)
            let l:shxq_sav = ''
            set shellxquote&
          endif
          let cmd = '"' . $VIMRUNTIME . '\diff"'
        else
          let cmd = substitute($VIMRUNTIME, ' ', '" ', '') . '\diff"'
        endif
      else
        let cmd = $VIMRUNTIME . '\diff'
      endif
      let cmd = substitute(cmd, '!', '\!', 'g')
      silent execute '!' . cmd . ' ' . opt . arg1 . ' ' . arg2 . ' > ' . arg3
      if exists('l:shxq_sav')
        let &shellxquote=l:shxq_sav
      endif
    endfunction
" }}}

" Misc {{{
    " redraw only when need to
    set lazyredraw

    " make the search case sensitive if uppercase letter available
    set ignorecase
    set smartcase

    " highlight matches
    set hlsearch

    " turn off search highlight
    set nohlsearch

    " highlight current line
    set cursorline

    " prevent creating swap file on save
    set noswapfile

    " prevent creating backup file on save
    set nobackup
    set nowritebackup

    " prevent creating undo file on save
    set noundofile

    " do not automatically wrap on load
    set nowrap

    " do not automatically wrap text when typing
    set formatoptions-=t

    " set leader to comma
    let mapleader=","

    " open the new file on the right when splitting a view
    set splitright
" }}}

" Folding {{{
    " enable folding
    set foldenable

    " open most folds by default
    set foldlevelstart=10

    " set most number of folds allowed
    set foldnestmax=10

    " fold based on the indent level
    set foldmethod=indent

    " enable modelines (used in this file on the last line)
    set modelines=1

    " space key opens/closes folds
    nnoremap <space> za

    " set foldlevel to 0
    nnoremap <leader>0 :set foldlevel=0<CR>

    " set foldlevel to 1
    nnoremap <leader>1 :set foldlevel=1<CR>

    " set foldlevel to 2
    nnoremap <leader>2 :set foldlevel=2<CR>

    " set foldlevel to 3
    nnoremap <leader>3 :set foldlevel=3<CR>

    " set foldlevel to 4
    nnoremap <leader>4 :set foldlevel=4<CR>

    " set foldlevel to 5
    nnoremap <leader>5 :set foldlevel=5<CR>
" }}}

" Spaces and Tabs {{{
    " number of visual spaces per TAB
    set tabstop=4

    " number of spaces in tab when editing
    set softtabstop=4

    " set the number of spaces to shift when indenting in normal mode
    set shiftwidth=4

    " convert tabs to spaces
    set expandtab
" }}}

" UI {{{
    " show relative line numbers
    set relativenumber

    " Hide Menu Bar
    set guioptions -=m 

    " Hide Tool Bar
    set guioptions -=T

    " Hide left scrollbar
    set guioptions-=l

    " Hide left scrollbar when windows are vertically split
    set guioptions-=L

    " Hide right scrollbar
    set guioptions-=r

    " set editor font
    set guifont=consolas:h12:b

    " set line height
    set linespace=8
" }}}

" Movement Keymaps {{{
    " map semicolon to colon
    map ; :

    " jk is escape
    inoremap jk <esc>

    " JK is escape
    inoremap JK <esc>

    " Jump to the window left to the current window
    map <C-h> <C-w>h

    " Jump to the window right to the current window
    map <C-l> <C-w>l

    " Jump to the window bottom to the current window
    map <C-j> <C-w>j

    " Jump to the window top to the current window
    map <C-k> <C-w>k
" }}}

" Tab Keymaps {{{
    " Open new tab
    map <Leader>t :tabnew<CR>

    " Move to next tab
    map tj :tabnext<CR>

    " Move to previous tab
    map tk :tabprev<CR>

    " Move current tab to the left
    map th :tabm -1<CR>

    " Move current tab to the right
    map tl :tabm +1<CR>
" }}}

" Combination Keymaps {{{
    " reload vim to apply vimrc updates
    map <F5> :source $MYVIMRC<CR>

    " open vimrc
    map <F2> :e $MYVIMRC<CR>
" }}}

" External Packages {{{
    set nocompatible              " be iMproved, required
    filetype off                  " required

    " set the runtime path to include Vundle and initialize
    set rtp+=~/.vim/bundle/Vundle.vim
    call vundle#begin()

    " let Vundle manage Vundle, required
    Plugin 'VundleVim/Vundle.vim'
    Plugin 'dracula/vim'
    Plugin 'honza/vim-snippets'
    Plugin 'jparise/vim-graphql'
    Plugin 'kien/ctrlp.vim'
    Plugin 'scrooloose/nerdcommenter'
    Plugin 'scrooloose/nerdtree'
    Plugin 'scrooloose/syntastic'
    Plugin 'terryma/vim-multiple-cursors'

    " All of your Plugins must be added before the following line
    call vundle#end()            " required
    filetype plugin indent on    " required

    " Brief help
    " :PluginList       - lists configured plugins
    " :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
    " :PluginSearch foo - searches for foo; append `!` to refresh local cache
    " :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
" }}}

" External package settings {{{
    " NERDTree - Toggle file explorer
    map <C-S-E> :NERDTreeToggle<CR>

    " NERDTree - Find the current file in file explorer
    map <C-S-F> :NERDTreeFind<CR>

    " NERDTree - Show hidden files in file explorer
    let NERDTreeShowHidden=1

    " ctrlp - Show dotfiles and dotdirs in file finder
    let ctrlp_show_hidden=1

    " ctrlp - Ignore loading provided folders to improve startup time
    let g:ctrlp_custom_ignore = '\v[\/](\.git|node_modules|vendor)$'
" }}}

" Colors {{{
    " set default colorscheme
    colorscheme dracula 
" }}}

" File specific settings {{{
    " 2 space tabs for html files
    autocmd Filetype html setlocal ts=2 sw=2 expandtab
    "
    " 2 space tabs for javascript files
    autocmd Filetype javascript setlocal ts=2 sw=2 expandtab
" }}}

" vim:foldlevel=0
