set nocompatible
source $VIMRUNTIME/vimrc_example.vim
source $VIMRUNTIME/mswin.vim
behave mswin

set diffexpr=MyDiff()
function MyDiff()
  let opt = '-a --binary '
  if &diffopt =~ 'icase' | let opt = opt . '-i ' | endif
  if &diffopt =~ 'iwhite' | let opt = opt . '-b ' | endif
  let arg1 = v:fname_in
  if arg1 =~ ' ' | let arg1 = '"' . arg1 . '"' | endif
  let arg2 = v:fname_new
  if arg2 =~ ' ' | let arg2 = '"' . arg2 . '"' | endif
  let arg3 = v:fname_out
  if arg3 =~ ' ' | let arg3 = '"' . arg3 . '"' | endif
  let eq = ''
  if $VIMRUNTIME =~ ' '
    if &sh =~ '\<cmd'
      let cmd = '""' . $VIMRUNTIME . '\diff"'
      let eq = '"'
    else
      let cmd = substitute($VIMRUNTIME, ' ', '" ', '') . '\diff"'
    endif
  else
    let cmd = $VIMRUNTIME . '\diff'
  endif
  silent execute '!' . cmd . ' ' . opt . arg1 . ' ' . arg2 . ' > ' . arg3 . eq
endfunction

set nohlsearch
set nowrap
set relativenumber
set number
set tabstop=2
set shiftwidth=2
set splitright
set smartcase
set ic
set smartindent
set noswapfile
set nobackup
set nowritebackup
set noundofile

let mapleader=","

imap jk <ESC>
imap JK <ESC>
map ; :
map <F2> :e $MYVIMRC<CR>
map <C-h> <C-w>h
map <C-l> <C-w>l
map <C-j> <C-w>j
map <C-k> <C-w>k
map <F3> :NERDTreeToggle<CR>
map <F4> :NERDTreeFind<CR>
map tj :tabnext<CR>
map tk :tabprev<CR>
map th :tabm -1<CR>
map tl :tabm +1<CR>
map <Leader>t :tabnew<CR>
map <Leader>, <C-y>,
map <Leader>s :%s/
map <Leader>c :.,$s/
map <Leader>f :Unite line<CR> i

noremap <silent> <c-u> :call smooth_scroll#up(&scroll*2, 10, 4)<CR>
noremap <silent> <c-d> :call smooth_scroll#down(&scroll*2, 10, 4)<CR>

xmap ga <Plug>(EasyAlign)
nmap ga <Plug>(EasyAlign)

filetype plugin indent on
syntax enable

if 0 | endif

if &compatible
	set nocompatible
endif

set runtimepath+=~/.vim/bundle/neobundle.vim/

call neobundle#begin(expand('~/.vim/bundle/'))

NeoBundleFetch 'Shougo/neobundle.vim'

NeoBundle 'https://github.com/kien/ctrlp.vim'
NeoBundle 'https://github.com/tpope/vim-surround'
NeoBundle 'https://github.com/mattn/emmet-vim'
NeoBundle 'https://github.com/scrooloose/nerdcommenter'
NeoBundle 'https://github.com/scrooloose/nerdtree'
NeoBundle 'https://github.com/tmhedberg/matchit'
NeoBundle 'https://github.com/terryma/vim-smooth-scroll'
NeoBundle 'https://github.com/junegunn/vim-easy-align'
NeoBundle 'https://github.com/terryma/vim-multiple-cursors'
NeoBundle 'https://github.com/captbaritone/better-indent-support-for-php-with-html'
NeoBundle 'https://github.com/Valloric/YouCompleteMe'
NeoBundle 'https://github.com/Shougo/unite.vim'
NeoBundle 'https://github.com/SirVer/ultisnips'
NeoBundle 'https://github.com/Raimondi/delimitMate'
NeoBundle 'https://github.com/easymotion/vim-easymotion'
NeoBundle 'https://github.com/scrooloose/syntastic'

call neobundle#end()

filetype plugin indent on

NeoBundleCheck
	
let g:ctrlp_custom_ignore = 'node_modules\|DS_Store\|git\|bower_components\|vendor'

set wildignore+=/bower_components,/node_modules,/vendor
call unite#custom#source('file_rec', 'ignore_globs', split(&wildignore, ','))

let g:syntastic_php_checkers = ['php', 'phpcs', 'phpmd']
let g:syntastic_quiet_messages = {
        \ "!level":  "errors",
        \ "type":    "style" }

set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0
